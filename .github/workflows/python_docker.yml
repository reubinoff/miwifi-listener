name: Deploy to docker

on:
  push:
    paths:
    - 'listener/**'
    - '.github/workflows/python_docker.yml'

jobs:
  build-and-deploy-azure:
    runs-on: ubuntu-latest
    env:
      BASE_REPO: reubinoff/scheduler_listener
      REGISTRY: reubinoff.azurecr.io
      DOCKERHUB_REGISTRY: docker.io
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Log in to the Container registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build And Publish Docker azure
      run: |
        cd listener
        docker-compose build
        docker tag ${{ env.BASE_REPO }}:latest ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:${{ github.sha }}
        docker tag ${{ env.BASE_REPO }}:latest ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:latest
        docker push ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:latest
        docker tag ${{ env.BASE_REPO }}:latest ${{ env.DOCKERHUB_REGISTRY }}/${{ env.BASE_REPO }}:${{ github.sha }}
        docker tag ${{ env.BASE_REPO }}:latest ${{ env.DOCKERHUB_REGISTRY }}/${{ env.BASE_REPO }}:latest
        docker push ${{ env.DOCKERHUB_REGISTRY }}/${{ env.BASE_REPO }}:${{ github.sha }}
        docker push ${{ env.DOCKERHUB_REGISTRY }}/${{ env.BASE_REPO }}:latest


  test-docker:
    runs-on: ubuntu-latest
    env:
      BASE_REPO: reubinoff/scheduler_listener
      REGISTRY: reubinoff.azurecr.io
      DOCKERHUB_REGISTRY: docker.io
    steps: 
    - name: 'Log in to the Container registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: docker run
      run: docker run -d -p 3000:3000 ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:${{ github.sha }} 
    - name: curl to container
      run: curl -s http://localhost:3000/health